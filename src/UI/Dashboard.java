/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;


import Logic.Book;
import Logic.Cashier;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import Logic.Conn;
import Logic.GenerateReports;
import Logic.Manager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
//import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.table.TableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Anushka Lakshan
 */


public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    

    Statement st;
    boolean isAdmin;
    Conn DBcon = new Conn();
    Connection conn = DBcon.getConn();
    private static final Random random = new Random();
    
    Manager admin = null;
    Cashier normal = null;
    
    public Dashboard(Manager admin) {
        initComponents();

        this.admin = admin;
        
        View_Books();
        utilizeCards();
        utilizeChartz();
        TitlePanel.setSize(870, 70);
        
        UserName.setText(admin.getName());
        UserType.setText("Logged as Manager");
        
        this.revalidate();
        this.repaint();
        
        TitlePanel.setPreferredSize(new Dimension(TitlePanel.getPreferredSize().width, 70));
        TitlePanel.setSize(870, 70);
        
        
    }
    
    public Dashboard(Cashier admin) {
        initComponents();
        
        this.normal = admin;
        
        Tabs.remove(CatTab);
        Tabs.remove(AccTab);
        Tabs.remove(ManageBook);
        Tabs.remove(ReportTab);
        
        SidePanel.remove(SideOp3);
        SidePanel.remove(SideOp4);
        SidePanel.remove(SideOp5);
        SidePanel.remove(SideOp6);
        
        UserName.setText(normal.getName());
        UserType.setText("Logged as Cashier");
        TitlePanel.setSize(870, 70);
        
        View_Books();
        utilizeCards();
        utilizeChartz();
        
        this.revalidate();
        this.repaint();
    }
    
    public void View_Books(){
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID;";
           
        try {

            
            st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel)MainTable.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(1)
                        ,rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getInt(6),rs.getString(7)
                });
                
            }
           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Background = new javax.swing.JPanel();
        MainCanvas = new Vendor_Codes.PanelRound();
        TitlePanel = new javax.swing.JPanel();
        MainTitle = new javax.swing.JLabel();
        SubTitle = new javax.swing.JLabel();
        UserAvatar = new javax.swing.JLabel();
        UserName = new javax.swing.JLabel();
        UserType = new javax.swing.JLabel();
        Tabs = new javax.swing.JTabbedPane();
        MainBoard = new javax.swing.JPanel();
        DBCard1 = new Vendor_Codes.PanelRound();
        DBCard3 = new Vendor_Codes.PanelRound();
        TotalBooks = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DBCard2 = new Vendor_Codes.PanelRound();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        DBCard4 = new Vendor_Codes.PanelRound();
        TotalCats = new javax.swing.JLabel();
        BarChart = new Vendor_Codes.PanelRound();
        PieChartDB = new Vendor_Codes.PanelRound();
        DBRefresh = new Vendor_Codes.ButtonGradient();
        BookTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Search = new javax.swing.JTextField();
        Filter = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        SearchBTN = new Vendor_Codes.ButtonGradient();
        ViewAll = new Vendor_Codes.ButtonGradient();
        ClearSearchBTN = new Vendor_Codes.ButtonGradient();
        ManageBook = new javax.swing.JPanel();
        BookOptionsPanel = new javax.swing.JLayeredPane();
        BookRemovePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        panelRound1 = new Vendor_Codes.PanelRound();
        jLabel4 = new javax.swing.JLabel();
        BookEditOptionPanel = new javax.swing.JPanel();
        DeleteBook = new Vendor_Codes.ButtonGradient();
        EditBookBTN = new Vendor_Codes.ButtonGradient();
        BookIcon = new javax.swing.JLabel();
        MB_Cat_L = new javax.swing.JLabel();
        MB_ID_L = new javax.swing.JLabel();
        MB_Name_L = new javax.swing.JLabel();
        MB_Price_L = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ManageBookTable = new javax.swing.JTable();
        ManageBookRefresh = new Vendor_Codes.ButtonGradient();
        AddBook = new Vendor_Codes.ButtonGradient();
        CatTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CategoryTable = new javax.swing.JTable();
        AddCategoryBTN = new Vendor_Codes.ButtonGradient();
        CategoryPane = new javax.swing.JLayeredPane();
        CategoryEditOP = new javax.swing.JPanel();
        EditCTBTN = new Vendor_Codes.ButtonGradient();
        DeleteCTBTN = new Vendor_Codes.ButtonGradient();
        SelectCategoryPane = new javax.swing.JPanel();
        panelRound2 = new Vendor_Codes.PanelRound();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CategoryRefresh = new Vendor_Codes.ButtonGradient();
        AccTab = new javax.swing.JPanel();
        userpane = new javax.swing.JLayeredPane();
        EditUserPane = new javax.swing.JPanel();
        ResetPass = new Vendor_Codes.ButtonGradient();
        DeleteUser = new Vendor_Codes.ButtonGradient();
        SelectUserPane = new javax.swing.JPanel();
        panelRound3 = new Vendor_Codes.PanelRound();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        AddUserBTN = new Vendor_Codes.ButtonGradient();
        UserRefresh = new Vendor_Codes.ButtonGradient();
        ReportTab = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ReportTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        ReportFilter = new javax.swing.JComboBox<>();
        FilterBTN = new Vendor_Codes.ButtonGradient();
        ReportBTN = new Vendor_Codes.ButtonGradient();
        SidePanel = new javax.swing.JPanel();
        SideOp1 = new javax.swing.JPanel();
        Sop1Text = new javax.swing.JLabel();
        SideOp2 = new javax.swing.JPanel();
        Sop1Text1 = new javax.swing.JLabel();
        SideOp3 = new javax.swing.JPanel();
        Sop1Text2 = new javax.swing.JLabel();
        SideOp4 = new javax.swing.JPanel();
        Sop1Text3 = new javax.swing.JLabel();
        SideOp5 = new javax.swing.JPanel();
        Sop1Text4 = new javax.swing.JLabel();
        SideOp6 = new javax.swing.JPanel();
        Sop1Text5 = new javax.swing.JLabel();
        Dashboard = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        StatusBar = new Vendor_Codes.PanelRound();
        CloseBTN = new javax.swing.JLabel();
        minimizeBTN = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("City Bookshop Dashboard");
        setUndecorated(true);

        Background.setBackground(new java.awt.Color(51, 51, 51));
        Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainCanvas.setRoundBottomLeft(30);
        MainCanvas.setRoundBottomRight(30);
        MainCanvas.setRoundTopLeft(30);
        MainCanvas.setRoundTopRight(30);
        MainCanvas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainTitle.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        MainTitle.setText("Main Dashboard");

        SubTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SubTitle.setForeground(new java.awt.Color(51, 51, 51));
        SubTitle.setText("Visual representation of Inventory data");

        UserAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/user (1).png"))); // NOI18N
        UserAvatar.setToolTipText("Profile options");
        UserAvatar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserAvatar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserAvatarMouseClicked(evt);
            }
        });

        UserName.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        UserName.setForeground(new java.awt.Color(0, 51, 204));
        UserName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        UserName.setText("Administrator");

        UserType.setForeground(new java.awt.Color(0, 153, 153));
        UserType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        UserType.setText("Log as Manager");

        javax.swing.GroupLayout TitlePanelLayout = new javax.swing.GroupLayout(TitlePanel);
        TitlePanel.setLayout(TitlePanelLayout);
        TitlePanelLayout.setHorizontalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainTitle)
                    .addComponent(SubTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 423, Short.MAX_VALUE)
                .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TitlePanelLayout.setVerticalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TitlePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(MainTitle)
                            .addComponent(UserType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SubTitle)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(TitlePanelLayout.createSequentialGroup()
                        .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UserName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        MainCanvas.add(TitlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 870, 70));

        Tabs.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        DBCard1.setBackground(new java.awt.Color(19, 165, 180));
        DBCard1.setRoundBottomLeft(50);
        DBCard1.setRoundBottomRight(50);
        DBCard1.setRoundTopLeft(50);
        DBCard1.setRoundTopRight(50);

        DBCard3.setBackground(new java.awt.Color(255, 255, 255));
        DBCard3.setRoundBottomLeft(100);
        DBCard3.setRoundBottomRight(100);
        DBCard3.setRoundTopLeft(100);
        DBCard3.setRoundTopRight(100);
        DBCard3.setLayout(new java.awt.GridBagLayout());

        TotalBooks.setFont(new java.awt.Font("Segoe UI Black", 1, 40)); // NOI18N
        TotalBooks.setText("55");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = -15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 6);
        DBCard3.add(TotalBooks, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel6.setText("Total ");

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel7.setText("Books");

        javax.swing.GroupLayout DBCard1Layout = new javax.swing.GroupLayout(DBCard1);
        DBCard1.setLayout(DBCard1Layout);
        DBCard1Layout.setHorizontalGroup(
            DBCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBCard1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(DBCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DBCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        DBCard1Layout.setVerticalGroup(
            DBCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBCard1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(DBCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DBCard3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DBCard1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DBCard2.setBackground(new java.awt.Color(240, 110, 20));
        DBCard2.setRoundBottomLeft(50);
        DBCard2.setRoundBottomRight(50);
        DBCard2.setRoundTopLeft(50);
        DBCard2.setRoundTopRight(50);

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel8.setText("Total ");

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel9.setText("Categories");

        DBCard4.setBackground(new java.awt.Color(255, 255, 255));
        DBCard4.setRoundBottomLeft(100);
        DBCard4.setRoundBottomRight(100);
        DBCard4.setRoundTopLeft(100);
        DBCard4.setRoundTopRight(100);
        DBCard4.setLayout(new java.awt.GridBagLayout());

        TotalCats.setFont(new java.awt.Font("Segoe UI Black", 1, 40)); // NOI18N
        TotalCats.setText("55");
        DBCard4.add(TotalCats, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout DBCard2Layout = new javax.swing.GroupLayout(DBCard2);
        DBCard2.setLayout(DBCard2Layout);
        DBCard2Layout.setHorizontalGroup(
            DBCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBCard2Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(DBCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DBCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );
        DBCard2Layout.setVerticalGroup(
            DBCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DBCard2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(29, 29, 29))
            .addGroup(DBCard2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(DBCard4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BarChart.setBackground(new java.awt.Color(255, 255, 255));
        BarChart.setMaximumSize(new java.awt.Dimension(600, 500));
        BarChart.setRoundBottomLeft(20);
        BarChart.setRoundBottomRight(20);
        BarChart.setRoundTopLeft(20);
        BarChart.setRoundTopRight(20);
        BarChart.setLayout(new java.awt.BorderLayout());

        PieChartDB.setBackground(new java.awt.Color(255, 255, 255));
        PieChartDB.setRoundBottomLeft(20);
        PieChartDB.setRoundBottomRight(20);
        PieChartDB.setRoundTopLeft(20);
        PieChartDB.setRoundTopRight(20);
        PieChartDB.setLayout(new java.awt.BorderLayout());

        DBRefresh.setText("Refresh Dashboard");
        DBRefresh.setColor1(new java.awt.Color(0, 153, 153));
        DBRefresh.setColor2(new java.awt.Color(0, 51, 0));
        DBRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DBRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainBoardLayout = new javax.swing.GroupLayout(MainBoard);
        MainBoard.setLayout(MainBoardLayout);
        MainBoardLayout.setHorizontalGroup(
            MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainBoardLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DBRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainBoardLayout.createSequentialGroup()
                        .addGroup(MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DBCard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BarChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PieChartDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DBCard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainBoardLayout.setVerticalGroup(
            MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainBoardLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DBCard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DBCard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(MainBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BarChart, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(PieChartDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DBRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabs.addTab("Dashboard", MainBoard);

        MainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Name", "Author", "Description", "Price", "Quantity", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MainTable.setName("asd"); // NOI18N
        MainTable.setRowHeight(25);
        MainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainTableMouseClicked(evt);
            }
        });
        MainTable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                MainTableVetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(MainTable);

        jLabel1.setText("Search");

        Filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Name", "By Price", "By Category" }));

        jLabel2.setText("Book Records");

        SearchBTN.setText("Search");
        SearchBTN.setColor1(new java.awt.Color(0, 0, 51));
        SearchBTN.setColor2(new java.awt.Color(0, 51, 204));
        SearchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBTNActionPerformed(evt);
            }
        });

        ViewAll.setText("View All");
        ViewAll.setColor1(new java.awt.Color(0, 153, 153));
        ViewAll.setColor2(new java.awt.Color(0, 153, 0));
        ViewAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAllActionPerformed(evt);
            }
        });

        ClearSearchBTN.setText("Clear");
        ClearSearchBTN.setColor1(new java.awt.Color(204, 0, 51));
        ClearSearchBTN.setColor2(new java.awt.Color(102, 0, 102));
        ClearSearchBTN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ClearSearchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearSearchBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookTabLayout = new javax.swing.GroupLayout(BookTab);
        BookTab.setLayout(BookTabLayout);
        BookTabLayout.setHorizontalGroup(
            BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(BookTabLayout.createSequentialGroup()
                                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ClearSearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        BookTabLayout.setVerticalGroup(
            BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookTabLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearSearchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabs.addTab("Books", BookTab);

        BookOptionsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Select Book To see Options");

        panelRound1.setBackground(new java.awt.Color(51, 51, 51));
        panelRound1.setRoundBottomLeft(50);
        panelRound1.setRoundBottomRight(50);
        panelRound1.setRoundTopLeft(50);
        panelRound1.setRoundTopRight(50);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/selection.png"))); // NOI18N

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(14, 14, 14))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        javax.swing.GroupLayout BookRemovePanelLayout = new javax.swing.GroupLayout(BookRemovePanel);
        BookRemovePanel.setLayout(BookRemovePanelLayout);
        BookRemovePanelLayout.setHorizontalGroup(
            BookRemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookRemovePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(BookRemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        BookRemovePanelLayout.setVerticalGroup(
            BookRemovePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookRemovePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        BookOptionsPanel.add(BookRemovePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 410));

        BookEditOptionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DeleteBook.setText("Delete Selected Book");
        DeleteBook.setColor1(new java.awt.Color(51, 0, 51));
        DeleteBook.setColor2(new java.awt.Color(153, 0, 0));
        DeleteBook.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBookActionPerformed(evt);
            }
        });
        BookEditOptionPanel.add(DeleteBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 190, 40));

        EditBookBTN.setText("Edit Selected Book");
        EditBookBTN.setColor1(new java.awt.Color(153, 51, 0));
        EditBookBTN.setColor2(new java.awt.Color(255, 153, 0));
        EditBookBTN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        EditBookBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBookBTNActionPerformed(evt);
            }
        });
        BookEditOptionPanel.add(EditBookBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 190, 40));

        BookIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/book.png"))); // NOI18N
        BookEditOptionPanel.add(BookIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 140, 120));

        MB_Cat_L.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MB_Cat_L.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MB_Cat_L.setText("Category: Mystory");
        BookEditOptionPanel.add(MB_Cat_L, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 180, 20));

        MB_ID_L.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MB_ID_L.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MB_ID_L.setText("Book ID : 5");
        BookEditOptionPanel.add(MB_ID_L, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        MB_Name_L.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MB_Name_L.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MB_Name_L.setText("Name: Harry potter");
        BookEditOptionPanel.add(MB_Name_L, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 160, 180, -1));

        MB_Price_L.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MB_Price_L.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MB_Price_L.setText("Price : 1500");
        BookEditOptionPanel.add(MB_Price_L, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 180, 20));

        BookOptionsPanel.add(BookEditOptionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 230, 413));

        ManageBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Name", "Author", "Description", "Price", "Quantity", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageBookTable.setName("asd"); // NOI18N
        ManageBookTable.setRowHeight(25);
        ManageBookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ManageBookTableMouseClicked(evt);
            }
        });
        ManageBookTable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                ManageBookTableVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(ManageBookTable);

        ManageBookRefresh.setText("Refresh");
        ManageBookRefresh.setColor1(new java.awt.Color(0, 153, 153));
        ManageBookRefresh.setColor2(new java.awt.Color(0, 153, 0));
        ManageBookRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ManageBookRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageBookRefreshActionPerformed(evt);
            }
        });

        AddBook.setText("Add New Book");
        AddBook.setColor1(new java.awt.Color(0, 51, 102));
        AddBook.setColor2(new java.awt.Color(0, 102, 255));
        AddBook.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ManageBookLayout = new javax.swing.GroupLayout(ManageBook);
        ManageBook.setLayout(ManageBookLayout);
        ManageBookLayout.setHorizontalGroup(
            ManageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageBookLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(ManageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ManageBookRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ManageBookLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BookOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        ManageBookLayout.setVerticalGroup(
            ManageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageBookLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(AddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(ManageBookLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BookOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ManageBookRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        Tabs.addTab("Manage Book", ManageBook);

        CategoryTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category ID", "Category Name", "Number of Books"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CategoryTable.setRowHeight(30);
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(CategoryTable);

        AddCategoryBTN.setText("Add New Category Name");
        AddCategoryBTN.setColor1(new java.awt.Color(0, 0, 153));
        AddCategoryBTN.setColor2(new java.awt.Color(0, 153, 255));
        AddCategoryBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCategoryBTNActionPerformed(evt);
            }
        });

        EditCTBTN.setText("Edit Selected Category Name");
        EditCTBTN.setColor1(new java.awt.Color(204, 102, 0));
        EditCTBTN.setColor2(new java.awt.Color(51, 153, 0));
        EditCTBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCTBTNActionPerformed(evt);
            }
        });

        DeleteCTBTN.setText("Delete Selected Category");
        DeleteCTBTN.setColor1(new java.awt.Color(153, 0, 153));
        DeleteCTBTN.setColor2(new java.awt.Color(153, 0, 0));
        DeleteCTBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCTBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CategoryEditOPLayout = new javax.swing.GroupLayout(CategoryEditOP);
        CategoryEditOP.setLayout(CategoryEditOPLayout);
        CategoryEditOPLayout.setHorizontalGroup(
            CategoryEditOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryEditOPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CategoryEditOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EditCTBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(DeleteCTBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        CategoryEditOPLayout.setVerticalGroup(
            CategoryEditOPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryEditOPLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(EditCTBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteCTBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        panelRound2.setBackground(new java.awt.Color(51, 51, 51));
        panelRound2.setRoundBottomLeft(50);
        panelRound2.setRoundBottomRight(50);
        panelRound2.setRoundTopLeft(50);
        panelRound2.setRoundTopRight(50);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/selection.png"))); // NOI18N

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(22, 22, 22))
        );

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Select Category to see Options");

        javax.swing.GroupLayout SelectCategoryPaneLayout = new javax.swing.GroupLayout(SelectCategoryPane);
        SelectCategoryPane.setLayout(SelectCategoryPaneLayout);
        SelectCategoryPaneLayout.setHorizontalGroup(
            SelectCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectCategoryPaneLayout.createSequentialGroup()
                .addGroup(SelectCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelectCategoryPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SelectCategoryPaneLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(panelRound2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SelectCategoryPaneLayout.setVerticalGroup(
            SelectCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectCategoryPaneLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(panelRound2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        CategoryPane.setLayer(CategoryEditOP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CategoryPane.setLayer(SelectCategoryPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout CategoryPaneLayout = new javax.swing.GroupLayout(CategoryPane);
        CategoryPane.setLayout(CategoryPaneLayout);
        CategoryPaneLayout.setHorizontalGroup(
            CategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CategoryPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SelectCategoryPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(CategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CategoryPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CategoryEditOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(66, Short.MAX_VALUE)))
        );
        CategoryPaneLayout.setVerticalGroup(
            CategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryPaneLayout.createSequentialGroup()
                .addComponent(SelectCategoryPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(CategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CategoryPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CategoryEditOP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        CategoryRefresh.setText("Refresh");
        CategoryRefresh.setColor1(new java.awt.Color(0, 102, 51));
        CategoryRefresh.setColor2(new java.awt.Color(51, 204, 0));
        CategoryRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CatTabLayout = new javax.swing.GroupLayout(CatTab);
        CatTab.setLayout(CatTabLayout);
        CatTabLayout.setHorizontalGroup(
            CatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CatTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(CatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CategoryRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CatTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(CatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CatTabLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(CategoryPane, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CatTabLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(AddCategoryBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CatTabLayout.setVerticalGroup(
            CatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CatTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CatTabLayout.createSequentialGroup()
                        .addComponent(AddCategoryBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CategoryPane)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CategoryRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        Tabs.addTab("Category", CatTab);

        ResetPass.setText("Reset Password");
        ResetPass.setColor1(new java.awt.Color(204, 102, 0));
        ResetPass.setColor2(new java.awt.Color(51, 153, 0));
        ResetPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetPassActionPerformed(evt);
            }
        });

        DeleteUser.setText("Delete Selected User");
        DeleteUser.setColor1(new java.awt.Color(153, 0, 153));
        DeleteUser.setColor2(new java.awt.Color(153, 0, 0));
        DeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditUserPaneLayout = new javax.swing.GroupLayout(EditUserPane);
        EditUserPane.setLayout(EditUserPaneLayout);
        EditUserPaneLayout.setHorizontalGroup(
            EditUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditUserPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EditUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ResetPass, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(DeleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        EditUserPaneLayout.setVerticalGroup(
            EditUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditUserPaneLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(ResetPass, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        panelRound3.setBackground(new java.awt.Color(51, 51, 51));
        panelRound3.setRoundBottomLeft(50);
        panelRound3.setRoundBottomRight(50);
        panelRound3.setRoundTopLeft(50);
        panelRound3.setRoundTopRight(50);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/selection.png"))); // NOI18N

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound3Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound3Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(22, 22, 22))
        );

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Select User to see Options");

        javax.swing.GroupLayout SelectUserPaneLayout = new javax.swing.GroupLayout(SelectUserPane);
        SelectUserPane.setLayout(SelectUserPaneLayout);
        SelectUserPaneLayout.setHorizontalGroup(
            SelectUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectUserPaneLayout.createSequentialGroup()
                .addGroup(SelectUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelectUserPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SelectUserPaneLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(panelRound3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SelectUserPaneLayout.setVerticalGroup(
            SelectUserPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelectUserPaneLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(panelRound3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        userpane.setLayer(EditUserPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userpane.setLayer(SelectUserPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout userpaneLayout = new javax.swing.GroupLayout(userpane);
        userpane.setLayout(userpaneLayout);
        userpaneLayout.setHorizontalGroup(
            userpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userpaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SelectUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(userpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(userpaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(EditUserPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(66, Short.MAX_VALUE)))
        );
        userpaneLayout.setVerticalGroup(
            userpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userpaneLayout.createSequentialGroup()
                .addComponent(SelectUserPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(userpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(userpaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(EditUserPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        UserTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", " Name", "Password", "User type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTable.setRowHeight(30);
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(UserTable);

        AddUserBTN.setText("Add New User");
        AddUserBTN.setColor1(new java.awt.Color(0, 0, 153));
        AddUserBTN.setColor2(new java.awt.Color(0, 153, 255));
        AddUserBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserBTNActionPerformed(evt);
            }
        });

        UserRefresh.setText("Refresh");
        UserRefresh.setColor1(new java.awt.Color(0, 102, 51));
        UserRefresh.setColor2(new java.awt.Color(51, 204, 0));
        UserRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AccTabLayout = new javax.swing.GroupLayout(AccTab);
        AccTab.setLayout(AccTabLayout);
        AccTabLayout.setHorizontalGroup(
            AccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(AccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UserRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AccTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(AccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AccTabLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(userpane, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AccTabLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(AddUserBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AccTabLayout.setVerticalGroup(
            AccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AccTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AccTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AccTabLayout.createSequentialGroup()
                        .addComponent(AddUserBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userpane)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        Tabs.addTab("Accounts", AccTab);

        ReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Name", "Author", "Description", "Price", "Quantity", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ReportTable.setName("asd"); // NOI18N
        ReportTable.setRowHeight(25);
        ReportTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReportTableMouseClicked(evt);
            }
        });
        ReportTable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                ReportTableVetoableChange(evt);
            }
        });
        jScrollPane5.setViewportView(ReportTable);

        jLabel14.setText("Filter By :");

        ReportFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Book ID", "Name", "Price", "Quantity", "Category" }));

        FilterBTN.setText("Filter");
        FilterBTN.setColor1(new java.awt.Color(0, 153, 153));
        FilterBTN.setColor2(new java.awt.Color(255, 153, 0));
        FilterBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterBTNActionPerformed(evt);
            }
        });

        ReportBTN.setText("Generate Report");
        ReportBTN.setColor1(new java.awt.Color(0, 0, 153));
        ReportBTN.setColor2(new java.awt.Color(153, 0, 0));
        ReportBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReportTabLayout = new javax.swing.GroupLayout(ReportTab);
        ReportTab.setLayout(ReportTabLayout);
        ReportTabLayout.setHorizontalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportTabLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(ReportTabLayout.createSequentialGroup()
                        .addComponent(ReportFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FilterBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ReportBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        ReportTabLayout.setVerticalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTabLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReportFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(FilterBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ReportBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        Tabs.addTab("Reports", ReportTab);

        MainCanvas.add(Tabs, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 860, 540));

        Background.add(MainCanvas, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 38, 900, 600));

        SidePanel.setBackground(new java.awt.Color(51, 51, 51));
        SidePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SideOp1.setBackground(new java.awt.Color(0, 0, 0));
        SideOp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp1MouseClicked(evt);
            }
        });

        Sop1Text.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text.setText("Dashboard");

        javax.swing.GroupLayout SideOp1Layout = new javax.swing.GroupLayout(SideOp1);
        SideOp1.setLayout(SideOp1Layout);
        SideOp1Layout.setHorizontalGroup(
            SideOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(Sop1Text)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SideOp1Layout.setVerticalGroup(
            SideOp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 220, -1));

        SideOp2.setBackground(new java.awt.Color(51, 51, 51));
        SideOp2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp2MouseClicked(evt);
            }
        });

        Sop1Text1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text1.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text1.setText("Search Books");

        javax.swing.GroupLayout SideOp2Layout = new javax.swing.GroupLayout(SideOp2);
        SideOp2.setLayout(SideOp2Layout);
        SideOp2Layout.setHorizontalGroup(
            SideOp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Sop1Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        SideOp2Layout.setVerticalGroup(
            SideOp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, -1));

        SideOp3.setBackground(new java.awt.Color(51, 51, 51));
        SideOp3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp3MouseClicked(evt);
            }
        });

        Sop1Text2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text2.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text2.setText("Manage Books");

        javax.swing.GroupLayout SideOp3Layout = new javax.swing.GroupLayout(SideOp3);
        SideOp3.setLayout(SideOp3Layout);
        SideOp3Layout.setHorizontalGroup(
            SideOp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Sop1Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        SideOp3Layout.setVerticalGroup(
            SideOp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, -1, -1));

        SideOp4.setBackground(new java.awt.Color(51, 51, 51));
        SideOp4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp4MouseClicked(evt);
            }
        });

        Sop1Text3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text3.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text3.setText("Manage Categories");

        javax.swing.GroupLayout SideOp4Layout = new javax.swing.GroupLayout(SideOp4);
        SideOp4.setLayout(SideOp4Layout);
        SideOp4Layout.setHorizontalGroup(
            SideOp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(Sop1Text3)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        SideOp4Layout.setVerticalGroup(
            SideOp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, -1, -1));

        SideOp5.setBackground(new java.awt.Color(51, 51, 51));
        SideOp5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp5MouseClicked(evt);
            }
        });

        Sop1Text4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text4.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text4.setText("Manage Accounts");

        javax.swing.GroupLayout SideOp5Layout = new javax.swing.GroupLayout(SideOp5);
        SideOp5.setLayout(SideOp5Layout);
        SideOp5Layout.setHorizontalGroup(
            SideOp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(Sop1Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        SideOp5Layout.setVerticalGroup(
            SideOp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, -1, -1));

        SideOp6.setBackground(new java.awt.Color(51, 51, 51));
        SideOp6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SideOp6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SideOp6MouseClicked(evt);
            }
        });

        Sop1Text5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Sop1Text5.setForeground(new java.awt.Color(255, 255, 255));
        Sop1Text5.setText("Generate Reports");

        javax.swing.GroupLayout SideOp6Layout = new javax.swing.GroupLayout(SideOp6);
        SideOp6.setLayout(SideOp6Layout);
        SideOp6Layout.setHorizontalGroup(
            SideOp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp6Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(Sop1Text5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        SideOp6Layout.setVerticalGroup(
            SideOp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideOp6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sop1Text5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SidePanel.add(SideOp6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, -1, -1));

        Dashboard.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Dashboard.setForeground(new java.awt.Color(204, 204, 204));
        Dashboard.setText("Inventory Management System");
        SidePanel.add(Dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 86, 182, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/CityBook logo.png"))); // NOI18N
        SidePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 23, -1, -1));

        jLabel15.setForeground(new java.awt.Color(0, 153, 153));
        jLabel15.setText("About");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        SidePanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 610, -1, -1));

        jLabel16.setText("@ 2023");
        SidePanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 610, -1, -1));

        Background.add(SidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 216, 644));

        StatusBar.setBackground(new java.awt.Color(0, 0, 0));
        StatusBar.setRoundBottomLeft(30);
        StatusBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                StatusBarMouseDragged(evt);
            }
        });
        StatusBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                StatusBarMousePressed(evt);
            }
        });

        CloseBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/BDClose (1).png"))); // NOI18N
        CloseBTN.setText("jLabel4");
        CloseBTN.setToolTipText("Exit");
        CloseBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseBTNMouseClicked(evt);
            }
        });

        minimizeBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/minimize.png"))); // NOI18N
        minimizeBTN.setText("jLabel4");
        minimizeBTN.setToolTipText("Minimize");
        minimizeBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBTNMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout StatusBarLayout = new javax.swing.GroupLayout(StatusBar);
        StatusBar.setLayout(StatusBarLayout);
        StatusBarLayout.setHorizontalGroup(
            StatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatusBarLayout.createSequentialGroup()
                .addContainerGap(308, Short.MAX_VALUE)
                .addComponent(minimizeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CloseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        StatusBarLayout.setVerticalGroup(
            StatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CloseBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimizeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Background.add(StatusBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 0, 370, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, 1159, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void CheckMainTable(){
        DefaultTableModel model = (DefaultTableModel)MainTable.getModel();
        int rowCount = model.getRowCount();
        JLabel Messagelabel = new JLabel("No records to display...");
        Messagelabel.setSize( Messagelabel.getPreferredSize() );
        Messagelabel.setBounds(300, 100, 200, 30);
        
        if(rowCount == 0){
            
            MainTable.add(Messagelabel);
            MainTable.setFillsViewportHeight(true);
            
            MainTable.revalidate();
            MainTable.repaint();
        }else{
            MainTable.remove(Messagelabel);
            MainTable.removeAll();
            
            MainTable.revalidate();
            MainTable.repaint();
            
        }
    }
    
    
    
    
    private void MainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_MainTableMouseClicked
    
//    method overloading
    
    private void Booksearch(String Name){
        String SearchText = Name;
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID WHERE Book.Name LIKE '%"+ SearchText +"%';";
        
        HandleBookSearch(sql);
        
    }
    private void Booksearch(String Name, boolean category){
        String SearchText = Name;
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID WHERE Category.Name LIKE '%"+ SearchText +"%';";
        
        HandleBookSearch(sql);
        
    }
    private void Booksearch(int price){
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID WHERE Book.Price = '"+ price +"';";
        
        HandleBookSearch(sql);
        
    }
    
    private void HandleBookSearch(String sql){
        try {
                    st = conn.createStatement();

                    ResultSet rs = st.executeQuery(sql);

                    DefaultTableModel model = (DefaultTableModel)MainTable.getModel();
                    model.setRowCount(0);

                    while(rs.next()){
                        model.addRow(new Object[]{rs.getInt(1)
                                ,rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getInt(6),rs.getString(7)
                        });

                    }


                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
            }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
        CheckMainTable();
    }
    
    private void MainTableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_MainTableVetoableChange
        
    
    }//GEN-LAST:event_MainTableVetoableChange

    private void sidePanelColorSet(JPanel panel){
        Color Selectedcolor = new Color(0, 0, 0);
        Color Normalcolor = new Color(51, 51, 51);
        
        SideOp1.setBackground(Normalcolor);
        SideOp2.setBackground(Normalcolor);
        SideOp3.setBackground(Normalcolor);
        SideOp4.setBackground(Normalcolor);
        SideOp5.setBackground(Normalcolor);
        SideOp6.setBackground(Normalcolor);
        
        panel.setBackground(Selectedcolor);
    }
    
    private void SideOp1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp1MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(0);
        sidePanelColorSet(SideOp1);
        MainTitle.setText("Main Dashboard");
        SubTitle.setText("Visual representation of Inventory data");
    }//GEN-LAST:event_SideOp1MouseClicked

    private void SideOp2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp2MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(1);
        sidePanelColorSet(SideOp2);
        MainTitle.setText("Search Books");
        SubTitle.setText("Search books base on name, price and category");
    }//GEN-LAST:event_SideOp2MouseClicked

    private void SideOp3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp3MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(2);
        sidePanelColorSet(SideOp3);
        manageBookTableR();
        BookEditOptionPanel.setVisible(false);
            BookRemovePanel.setVisible(true);
            BookOptionsPanel.revalidate();
            BookOptionsPanel.repaint();
        MainTitle.setText("Manage Books");
        SubTitle.setText("Add, Edit and Delete Books");
    }//GEN-LAST:event_SideOp3MouseClicked

    private void SideOp4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp4MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(3);
        sidePanelColorSet(SideOp4);
        viewCategoryT();
        CategoryEditOP.setVisible(false);
        SelectCategoryPane.setVisible(true);
        CategoryPane.revalidate();
        CategoryPane.repaint();
        
        MainTitle.setText("Manage Category");
        SubTitle.setText("Add new categories, edit and delete");
    }//GEN-LAST:event_SideOp4MouseClicked

    private void SideOp5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp5MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(4);
        sidePanelColorSet(SideOp5);
        viewUser();
        EditUserPane.setVisible(false);
        SelectUserPane.setVisible(true);
        userpane.revalidate();
        userpane.repaint();
        
        MainTitle.setText("Manage Accounts");
        SubTitle.setText("Add new users, reset passwords and delete users");
    }//GEN-LAST:event_SideOp5MouseClicked

    private void SearchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBTNActionPerformed
        // TODO add your handling code here:
        String filterT = (String)Filter.getSelectedItem();
        String SearchText = Search.getText();
        
        
//        Apply polymophism
        
        if (filterT == "By Name"){
         
            Booksearch(SearchText);
        }
        
        else if(filterT == "By Price"){
            
            int price = 0;
            try {
               price = Integer.parseInt(SearchText);
               Booksearch(price);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Enter Valid Price!");
            }
            
            
            
            Booksearch(price);
        }
        
        else if(filterT == "By Category"){
            
            Booksearch(SearchText,true);
        }
        
        
    }//GEN-LAST:event_SearchBTNActionPerformed

    private void ViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAllActionPerformed
        // TODO add your handling code here:
        View_Books();
        Search.setText("");
        CheckMainTable();
    }//GEN-LAST:event_ViewAllActionPerformed

    private void ClearSearchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearSearchBTNActionPerformed
        // TODO add your handling code here:
       DefaultTableModel model = (DefaultTableModel)MainTable.getModel();
       model.setRowCount(0);
       Search.setText("");
       
       CheckMainTable();
    }//GEN-LAST:event_ClearSearchBTNActionPerformed

    private Point initialClick;
    private void StatusBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatusBarMouseDragged
        // TODO add your handling code here:
        int thisX = getLocation().x;
                int thisY = getLocation().y;

                int xMoved = evt.getX() - initialClick.x;
                int yMoved = evt.getY() - initialClick.y;

                int X = thisX + xMoved;
                int Y = thisY + yMoved;

                setLocation(X, Y);
    }//GEN-LAST:event_StatusBarMouseDragged

    private void StatusBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatusBarMousePressed
        // TODO add your handling code here:
        initialClick = evt.getPoint();
        getComponentAt(initialClick);
    }//GEN-LAST:event_StatusBarMousePressed

    private void CloseBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseBTNMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_CloseBTNMouseClicked

    private void minimizeBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBTNMouseClicked
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minimizeBTNMouseClicked

    private void DBRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBRefreshActionPerformed
        // TODO add your handling code here:
        utilizeCards();
        utilizeChartz();
    }//GEN-LAST:event_DBRefreshActionPerformed

    private void ManageBookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManageBookTableMouseClicked
        // TODO add your handling code here:
        
        int row = ManageBookTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)ManageBookTable.getModel();

        if(row != -1){
            MB_ID_L.setText("Book ID : "+ model.getValueAt(row, 0).toString());
            MB_Name_L.setText("Name : "+ model.getValueAt(row, 1).toString());
            MB_Price_L.setText("Price : "+ model.getValueAt(row, 4).toString());
            MB_Cat_L.setText("Category : "+ model.getValueAt(row, 6).toString());
            
//            BookOptionsPanel.remove(BookRemovePanel);
            BookEditOptionPanel.setVisible(true);
            BookRemovePanel.setVisible(false);
            
            
            BookOptionsPanel.revalidate();
            BookOptionsPanel.repaint();
        }
    }//GEN-LAST:event_ManageBookTableMouseClicked

    private void ManageBookTableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_ManageBookTableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ManageBookTableVetoableChange

    private void ManageBookRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageBookRefreshActionPerformed
        // TODO add your handling code here:
        manageBookTableR();
    }//GEN-LAST:event_ManageBookRefreshActionPerformed

    private void DeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookActionPerformed
        // TODO add your handling code here:
        int row = ManageBookTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)ManageBookTable.getModel();
        
        String BookID = model.getValueAt(row, 0).toString();
        String BookNm = model.getValueAt(row, 1).toString();
        
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete " + BookNm+ " Book?",
                "Delete Book ID: " + BookID, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION){
            
            admin.DeleteBook(BookID, conn);

            manageBookTableR();
            BookEditOptionPanel.setVisible(false);
            BookRemovePanel.setVisible(true);
            BookOptionsPanel.revalidate();
            BookOptionsPanel.repaint();
            
        }else{
            JOptionPane.showMessageDialog(this, "Book delete cancelled!!");
        }
        
        
        

    }//GEN-LAST:event_DeleteBookActionPerformed

    private void EditBookBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookBTNActionPerformed
        // TODO add your handling code here:
        int row = ManageBookTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)ManageBookTable.getModel();
        
        
        Book myBook = new Book(model.getValueAt(row, 0).toString(),
                model.getValueAt(row, 1).toString(), model.getValueAt(row, 2).toString(), 
                model.getValueAt(row, 3).toString(), model.getValueAt(row, 4).toString(),
                model.getValueAt(row, 5).toString(), model.getValueAt(row, 6).toString());
        
        AddBookDialog add = new AddBookDialog(this, true, conn, admin,myBook);
        add.setVisible(true);
    }//GEN-LAST:event_EditBookBTNActionPerformed

    private void AddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookActionPerformed
        // TODO add your handling code here:

        AddBookDialog add = new AddBookDialog(this, true, conn, admin);
        add.setVisible(true);
    }//GEN-LAST:event_AddBookActionPerformed

    private void AddCategoryBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCategoryBTNActionPerformed
        // TODO add your handling code here:
        String cat = JOptionPane.showInputDialog(this, "Enter Category Name : ", "Add new Category",
                JOptionPane.QUESTION_MESSAGE);
        
        if( cat == null || cat.length() < 3 || cat == " "){
            JOptionPane.showMessageDialog(this, "Enter valid category Name", "Add category failed", JOptionPane.ERROR_MESSAGE);
        }else{
            if (admin.AddCategory(conn, cat)){
                viewCategoryT();
            }
        }
        
    }//GEN-LAST:event_AddCategoryBTNActionPerformed

    private void CategoryRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryRefreshActionPerformed
        // TODO add your handling code here:
        viewCategoryT();
    }//GEN-LAST:event_CategoryRefreshActionPerformed

    private void CategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryTableMouseClicked
        // TODO add your handling code here:
        CategoryEditOP.setVisible(true);
        SelectCategoryPane.setVisible(false);
        CategoryPane.revalidate();
        CategoryPane.repaint();
    }//GEN-LAST:event_CategoryTableMouseClicked

    private void DeleteCTBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCTBTNActionPerformed
        // TODO add your handling code here:
        int row = CategoryTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)CategoryTable.getModel();
        
        String catID = model.getValueAt(row, 0).toString();
        String catNm = model.getValueAt(row, 1).toString();
        String Bookno = model.getValueAt(row, 2).toString();
        
        if(Integer.parseInt(Bookno) != 0){
            JOptionPane.showMessageDialog(this, "This category can't delete, until number of books "
                    + "under this category is become 0","Can't Delete", JOptionPane.ERROR_MESSAGE);
        }
        else{
            
        
        
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete " + catNm+ " Category?",
                "Delete Book ID: " + catID, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION){
         if(admin.DeleteCategory(catID, conn)){
             CategoryEditOP.setVisible(false);
             SelectCategoryPane.setVisible(true);
             CategoryPane.revalidate();
             CategoryPane.repaint();
             
             viewCategoryT();
         }
        }
        else{
            JOptionPane.showMessageDialog(this, "Category delete cancelled!");
        }
        }
    }//GEN-LAST:event_DeleteCTBTNActionPerformed

    private void EditCTBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCTBTNActionPerformed
        // TODO add your handling code here:
        int row = CategoryTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)CategoryTable.getModel();
        
        String catID = model.getValueAt(row, 0).toString();
        String catNm = model.getValueAt(row, 1).toString();
        
        String cat = JOptionPane.showInputDialog(this, "Enter New Category Name : ", "Edit new Category",
                JOptionPane.QUESTION_MESSAGE);
        
        if(cat.length() < 3 || cat == null || cat == " "){
            JOptionPane.showMessageDialog(this, "Enter valid category Name", "Add category failed", JOptionPane.ERROR_MESSAGE);
        }else{
            if (admin.EditCategory(catID, cat, conn)){
                
                viewCategoryT();
            }
        }
        
        
        
    }//GEN-LAST:event_EditCTBTNActionPerformed

    private void ResetPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetPassActionPerformed
        // TODO add your handling code here:
        int row = UserTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)UserTable.getModel();
        
        String ID = model.getValueAt(row, 0).toString();
        
        
        String newPass = JOptionPane.showInputDialog(this, "Enter New Password : ", "Reset Password",
                JOptionPane.QUESTION_MESSAGE);
        
        if(newPass.length() < 6 || newPass == null || newPass == " "){
            JOptionPane.showMessageDialog(this, "Enter valid Password", "Password reset failed", JOptionPane.ERROR_MESSAGE);
        }else{
            if (admin.ResetAccount(newPass, conn, ID)){
                
                viewUser();
            }
        }
        
    }//GEN-LAST:event_ResetPassActionPerformed

    private void DeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserActionPerformed
        // TODO add your handling code here:
        int row = UserTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)UserTable.getModel();
        
        String ID = model.getValueAt(row, 0).toString();
        String uname = model.getValueAt(row, 1).toString();
        
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete " + uname+ " User?",
                "Delete Book ID: " + ID, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION){
         if(admin.DeleteAccount(ID, conn)){
             EditUserPane.setVisible(false);
             SelectUserPane.setVisible(true);
             userpane.revalidate();
             userpane.repaint();
             
             viewUser();
         }
        }
        else{
            JOptionPane.showMessageDialog(this, "Category delete cancelled!");
        }
        
    }//GEN-LAST:event_DeleteUserActionPerformed

    private void UserTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMouseClicked
        // TODO add your handling code here:
        EditUserPane.setVisible(true);
        SelectUserPane.setVisible(false);
        userpane.revalidate();
        userpane.repaint();
    }//GEN-LAST:event_UserTableMouseClicked

    private void AddUserBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserBTNActionPerformed
        // TODO add your handling code here:
        ManageUser user = new ManageUser(conn, admin);
        user.setVisible(true);
    }//GEN-LAST:event_AddUserBTNActionPerformed

    private void UserRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserRefreshActionPerformed
        // TODO add your handling code here:
        viewUser();
        
    }//GEN-LAST:event_UserRefreshActionPerformed

    private void ReportTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ReportTableMouseClicked

    private void ReportTableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_ReportTableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ReportTableVetoableChange

    private void SideOp6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SideOp6MouseClicked
        // TODO add your handling code here:
        Tabs.setSelectedIndex(5);
        sidePanelColorSet(SideOp6);
        
        ViewReportTable();
        
        MainTitle.setText("Generate Reports");
        SubTitle.setText("Genarate Excel reports with Inventory data");
    }//GEN-LAST:event_SideOp6MouseClicked

    private void FilterBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterBTNActionPerformed
        // TODO add your handling code here:
        ViewReportTable();
    }//GEN-LAST:event_FilterBTNActionPerformed

    private void ReportBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportBTNActionPerformed
        // TODO add your handling code here:
        GenerateReports report = new GenerateReports();
        report.generate(ReportTable);
        
        
    }//GEN-LAST:event_ReportBTNActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        About ab = new About(this, true);
        ab.setVisible(true);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void UserAvatarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserAvatarMouseClicked
        // TODO add your handling code here:
        if(normal == null){
            ProfileDialog pg = new ProfileDialog(this, true, this, admin);
            pg.setVisible(true);
        }
        else{
            ProfileDialog pg = new ProfileDialog(this, true, this, normal);
            pg.setVisible(true);
        }
    }//GEN-LAST:event_UserAvatarMouseClicked

    private void viewUser(){
        String sql = "SELECT * FROM User ORDER BY ID;";
           
        try {

            
            st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel)UserTable.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
                
                
                
                model.addRow(new Object[]{rs.getString(1)
                        ,rs.getString(2),"******",(rs.getInt(4) == 1) ? ("Manager") : ("Cashier")
                });
                
            }
           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
                    
                }
                }
        }
    }
 
    
    private void viewCategoryT(){
        String sql = "SELECT Category.ID, Category.Name, COUNT(Book.ID) AS BookCount\n" +
                    "FROM Category\n" +
                    "LEFT JOIN Book ON Category.ID = Book.Cat_ID\n" +
                    "GROUP BY Category.Name ORDER BY Category.ID;";
           
        try {

            
            st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel)CategoryTable.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1)
                        ,rs.getString(2),rs.getString(3)
                });
                
            }
           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
    }
    
    // manage book table refresh
    private void manageBookTableR(){
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID;";
           
        try {

            
            st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel)ManageBookTable.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(1)
                        ,rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getInt(6),rs.getString(7)
                });
                
            }
           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
    }
    
    private void utilizeCards(){
        
        String sql = "SELECT count(Book.Name) FROM Book;";
        
        int TotalBookV = 0;
        int TotalCatsV = 0;
        
        try {
                    st = conn.createStatement();

                    ResultSet rs = st.executeQuery(sql);
                    
                    TotalBookV = rs.getInt(1);
                    
                    TotalBooks.setText(String.valueOf(TotalBookV));
                    
                    sql = "SELECT count(Category.Name) FROM Category;";
                    st = conn.createStatement();

                    rs = st.executeQuery(sql);
                    
                    TotalCatsV = rs.getInt(1);
                    TotalCats.setText(String.valueOf(TotalCatsV));

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
            }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
        
        DBCard3.setSize(80, 80); 
        DBCard4.setSize(80, 80); 
        DBCard3.setLocation(30, 20);
        DBCard4.setLocation(30, 20);
        TotalBooks.setHorizontalAlignment(SwingConstants.CENTER);
        TotalCats.setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    private void utilizeChartz(){
        //          popular datasets for charts
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        DefaultPieDataset PieDataset = new DefaultPieDataset( );
        
        // utilize pie chart to get color
        
        JFreeChart piechart = ChartFactory.createPieChart("Categories",PieDataset, false,true,false);
        
        PiePlot piePlot =(PiePlot) piechart.getPlot();
        
        //       Utilize bar chart
        
        JFreeChart barchart = ChartFactory.createBarChart(
        "Inventory", // chart title
                "Category",  // x-axis label
        "Value",     // y-axis label
        dataset,     // dataset
        PlotOrientation.VERTICAL, // orientation
        false,        // legend
        true,        // tooltips
        false        // URLs
        );
        
        CategoryPlot categoryPlot = barchart.getCategoryPlot();
        CategoryAxis xAxis = categoryPlot.getDomainAxis();

        // Customize the font size of x-axis labels
        xAxis.setTickLabelFont(xAxis.getTickLabelFont().deriveFont(10f));
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(230,107,51);
        renderer.setSeriesPaint(0, clr3);

        
        //        get data for chartz
        String sql = "SELECT Category.Name, COUNT(Book.ID) AS BookCount\n" +
                    "FROM Category\n" +
                    "LEFT JOIN Book ON Category.ID = Book.Cat_ID\n" +
                    "GROUP BY Category.Name;";
        
        

        try {
            st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            String catName = "";
            int catCount = 0;
            

            while (rs.next()) {
                
                
                catName = rs.getString("Name");
                catCount = rs.getInt("BookCount");
                
                //add data to barchart
                dataset.setValue(catCount, "Value", catName);
                
                //add data to Piechart
                PieDataset.setValue(catName, catCount);
                piePlot.setSectionPaint(catName, getVibrantColor());

                
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "SQL Error : " + e.getMessage());

        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
        
        
        
        //        add bar chart
        
        ChartPanel barpChartPanel = new ChartPanel(barchart);
        barpChartPanel.setPreferredSize(new Dimension(380, 300));
        BarChart.removeAll();
        BarChart.add(barpChartPanel, BorderLayout.CENTER);
        BarChart.validate();
        
        // add pie chart
        
        piePlot.setBackgroundPaint(Color.white);
        
        //create chartPanel to display chart(graph)
        ChartPanel PieChartPanel = new ChartPanel(piechart);
        PieChartPanel.setPreferredSize(new Dimension(380, 300));
        PieChartDB.removeAll();
        PieChartDB.add(PieChartPanel, BorderLayout.CENTER);
        PieChartDB.validate();
        
        
        
    }
    
    private void ViewReportTable(){
        
        String Filter = ReportFilter.getSelectedItem().toString();
        
        String Order = null;
        
        if(Filter == "Book ID"){
            Order = "Book.ID";
        }
        else if(Filter == "Name"){
            Order = "Book.Name";
        }
        else if(Filter == "Price"){
            Order = "Book.Price";
        }
        else if(Filter == "Quantity"){
            Order = "Book.Quatity";
        }
        else{
            Order = "Category.Name";
        }
            
            
        String sql = "SELECT Book.ID, Book.Name, Book.Author, Book.Description," + 
                        "Book.Price, Book.Quatity, Category.Name AS Category" +
                         " FROM Book JOIN Category ON Book.Cat_ID = Category.ID ORDER BY "+ Order +";";
           
        try {

            
            st = conn.createStatement();
            
            ResultSet rs = st.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel)ReportTable.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(1)
                        ,rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getInt(6),rs.getString(7)
                });
                
            }
           
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e.getMessage());
        }
        finally{
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException ex) {
//                    Logger.getLogger(EditBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
    }
    
    public Color getVibrantColor() {
//        float hue = random.nextFloat();
//        float saturation = 0.3f + random.nextFloat() * 0.7f; // vibrant colors are fully saturated
//        float brightness = 0.6f + random.nextFloat() * 0.4f; // vibrant colors are fully bright
//
float baseHue = random.nextFloat();

        // Calculate the hue values for the triadic colors
        float hue1 = (baseHue + 1.0f / 3.0f) % 1.0f;
        

        // Create and return the triadic colors
        Color color1 = Color.getHSBColor(hue1, 1.0f, 1.0f);
        

        return color1;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                Manager test = new Manager("test user","999","test");
                
                new Dashboard(test).setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccTab;
    private Vendor_Codes.ButtonGradient AddBook;
    private Vendor_Codes.ButtonGradient AddCategoryBTN;
    private Vendor_Codes.ButtonGradient AddUserBTN;
    private javax.swing.JPanel Background;
    private Vendor_Codes.PanelRound BarChart;
    private javax.swing.JPanel BookEditOptionPanel;
    private javax.swing.JLabel BookIcon;
    private javax.swing.JLayeredPane BookOptionsPanel;
    private javax.swing.JPanel BookRemovePanel;
    private javax.swing.JPanel BookTab;
    private javax.swing.JPanel CatTab;
    private javax.swing.JPanel CategoryEditOP;
    private javax.swing.JLayeredPane CategoryPane;
    private Vendor_Codes.ButtonGradient CategoryRefresh;
    private javax.swing.JTable CategoryTable;
    private Vendor_Codes.ButtonGradient ClearSearchBTN;
    private javax.swing.JLabel CloseBTN;
    private Vendor_Codes.PanelRound DBCard1;
    private Vendor_Codes.PanelRound DBCard2;
    private Vendor_Codes.PanelRound DBCard3;
    private Vendor_Codes.PanelRound DBCard4;
    private Vendor_Codes.ButtonGradient DBRefresh;
    private javax.swing.JLabel Dashboard;
    private Vendor_Codes.ButtonGradient DeleteBook;
    private Vendor_Codes.ButtonGradient DeleteCTBTN;
    private Vendor_Codes.ButtonGradient DeleteUser;
    private Vendor_Codes.ButtonGradient EditBookBTN;
    private Vendor_Codes.ButtonGradient EditCTBTN;
    private javax.swing.JPanel EditUserPane;
    private javax.swing.JComboBox<String> Filter;
    private Vendor_Codes.ButtonGradient FilterBTN;
    private javax.swing.JLabel MB_Cat_L;
    private javax.swing.JLabel MB_ID_L;
    private javax.swing.JLabel MB_Name_L;
    private javax.swing.JLabel MB_Price_L;
    private javax.swing.JPanel MainBoard;
    private Vendor_Codes.PanelRound MainCanvas;
    private javax.swing.JTable MainTable;
    private javax.swing.JLabel MainTitle;
    private javax.swing.JPanel ManageBook;
    private Vendor_Codes.ButtonGradient ManageBookRefresh;
    private javax.swing.JTable ManageBookTable;
    private Vendor_Codes.PanelRound PieChartDB;
    private Vendor_Codes.ButtonGradient ReportBTN;
    private javax.swing.JComboBox<String> ReportFilter;
    private javax.swing.JPanel ReportTab;
    private javax.swing.JTable ReportTable;
    private Vendor_Codes.ButtonGradient ResetPass;
    private javax.swing.JTextField Search;
    private Vendor_Codes.ButtonGradient SearchBTN;
    private javax.swing.JPanel SelectCategoryPane;
    private javax.swing.JPanel SelectUserPane;
    private javax.swing.JPanel SideOp1;
    private javax.swing.JPanel SideOp2;
    private javax.swing.JPanel SideOp3;
    private javax.swing.JPanel SideOp4;
    private javax.swing.JPanel SideOp5;
    private javax.swing.JPanel SideOp6;
    private javax.swing.JPanel SidePanel;
    private javax.swing.JLabel Sop1Text;
    private javax.swing.JLabel Sop1Text1;
    private javax.swing.JLabel Sop1Text2;
    private javax.swing.JLabel Sop1Text3;
    private javax.swing.JLabel Sop1Text4;
    private javax.swing.JLabel Sop1Text5;
    private Vendor_Codes.PanelRound StatusBar;
    private javax.swing.JLabel SubTitle;
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JPanel TitlePanel;
    private javax.swing.JLabel TotalBooks;
    private javax.swing.JLabel TotalCats;
    private javax.swing.JLabel UserAvatar;
    private javax.swing.JLabel UserName;
    private Vendor_Codes.ButtonGradient UserRefresh;
    private javax.swing.JTable UserTable;
    private javax.swing.JLabel UserType;
    private Vendor_Codes.ButtonGradient ViewAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel minimizeBTN;
    private Vendor_Codes.PanelRound panelRound1;
    private Vendor_Codes.PanelRound panelRound2;
    private Vendor_Codes.PanelRound panelRound3;
    private javax.swing.JLayeredPane userpane;
    // End of variables declaration//GEN-END:variables
}
